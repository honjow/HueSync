name: Release

permissions:
  contents: write

on:
    workflow_dispatch:
    push:
        branches:
            - 'main'
        tags:
            - 'v*.*.*'

jobs:
  build_plugin:
    runs-on: ubuntu-latest
    container:
        image: archlinux:latest
    steps:
      - name: set git global safe directory
        run: |
          pacman -Syu git npm zip unzip --noconfirm
          git config --global --add safe.directory $(realpath .)

      - uses: actions/checkout@v4

      - name: submodules
        run: |
          git submodule update --init --recursive py_modules

      - name: change log level
        run: |
          sed -i 's/logging.DEBUG/logging.INFO/' py_modules/config.py

      - name: build plugin
        run: |
          npm i -g pnpm
          pnpm config set registry https://registry.npmmirror.com/
          pnpm install --no-frozen-lockfile
          pnpm update @decky/ui --latest
          pnpm update @decky/api --latest
          pnpm run build
          rm -f dist/*.map
          temp_dir=$(mktemp -d)
          temp_dir_zip=$(mktemp -d)
          
          # Prepare directory for tar.gz (preserves symlinks)
          mkdir -p $temp_dir/HueSync
          cp -r dist backend py_modules *.py *.json *.md *.js LICENSE $temp_dir/HueSync
          tar -czvf huesync.tar.gz -C $temp_dir HueSync
          
          # Prepare directory for zip (dereference symlinks for compatibility)
          mkdir -p $temp_dir_zip/HueSync
          cp -rL dist backend py_modules *.py *.json *.md *.js LICENSE $temp_dir_zip/HueSync
          (cd $temp_dir_zip && zip -r $OLDPWD/huesync.zip HueSync/)
      
      - name: show files
        run: |
          echo "=== tar.gz contents ==="
          tar -tzvf huesync.tar.gz | head -20
          echo ""
          echo "=== zip contents ==="
          unzip -l huesync.zip | head -20
      
      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: huesync
          path: |
            huesync.tar.gz
            huesync.zip

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build_plugin
    steps:
      - run: mkdir /tmp/artifacts

      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          path: /tmp/artifacts

      - run: ls -R /tmp/artifacts

      - name: publish to github release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            /tmp/artifacts/huesync/huesync.tar.gz
            /tmp/artifacts/huesync/huesync.zip
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: contains(github.ref, 'pre') || contains(github.ref, '.rc')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}